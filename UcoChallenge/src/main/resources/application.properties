spring.config.import=optional:file:.env[.properties]

spring.application.name=UcoChallenge

spring.datasource.url= ${spring--datasource--url}
spring.datasource.username=${spring--datasource--username}
spring.datasource.password=${spring--datasource--password}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.datasource.hikari.data-source-properties.sslmode=require
spring.datasource.hikari.data-source-properties.ssl=true

logging.level.org.springframework.jdbc.core=DEBUG
server.port=8080

server.address=127.0.0.1

# Dominio de su Auth0.
spring.security.oauth2.resourceserver.jwt.issuer-uri=${auth0-issuer}

# El identificador de su API (Resource Server), que debe ser requerido por el decoder.
spring.security.oauth2.resourceserver.jwt.audience=${auth0-audience}

# Cabecera compartida con el gateway para llamadas internas.
gateway.security.header=X-Gateway-Request
gateway.security.secret=${gateway-secret}

# Key Vault
spring.cloud.azure.keyvault.secret.property-sources[0].endpoint=https://ucochallenge-bs.vault.azure.net/

#Asegura que el mecanismo de Key Vault estï¿½ habilitado
spring.cloud.azure.keyvault.secret.property-source-enabled=true

# Credenciales globales del SP - Va lo que le pase al whasap para que pruebe
spring.cloud.azure.credential.client-id=${AZURE_CLIENT_ID} 
spring.cloud.azure.credential.client-secret=${AZURE_CLIENT_SECRET}
spring.cloud.azure.profile.tenant-id=${AZURE_TENANT_ID}

logging.level.org.springframework.boot.context.config=DEBUG
logging.level.com.azure=DEBUG


